// Mocks generated by Mockito 5.4.4 from annotations
// in hdv_watcher/test/features/item/presentation/providers/items/notifiers/items_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i5;
import 'package:hdv_watcher/core/enums/price_type.dart' as _i7;
import 'package:hdv_watcher/core/errors/failures.dart' as _i6;
import 'package:hdv_watcher/features/item/domain/repository/item_repository.dart'
    as _i2;
import 'package:hdv_watcher/features/item/domain/usecase/fetch_paginated_items_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeItemRepository_0 extends _i1.SmartFake
    implements _i2.ItemRepository {
  _FakeItemRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FetchPaginatedItemsUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchPaginatedItemsUsecase extends _i1.Mock
    implements _i3.FetchPaginatedItemsUsecase {
  MockFetchPaginatedItemsUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ItemRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeItemRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ItemRepository);

  @override
  _i4.Future<_i5.Either<_i6.Failure, Map<String, dynamic>>?> call({
    required int? pageIndex,
    required _i7.PriceType? priceType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #pageIndex: pageIndex,
            #priceType: priceType,
          },
        ),
        returnValue:
            _i4.Future<_i5.Either<_i6.Failure, Map<String, dynamic>>?>.value(),
      ) as _i4.Future<_i5.Either<_i6.Failure, Map<String, dynamic>>?>);
}
