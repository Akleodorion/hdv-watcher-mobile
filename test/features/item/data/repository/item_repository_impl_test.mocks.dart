// Mocks generated by Mockito 5.4.4 from annotations
// in hdv_watcher/test/features/item/data/repository/item_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hdv_watcher/core/enums/price_type.dart' as _i5;
import 'package:hdv_watcher/features/item/data/datasources/item_remote_date_source.dart'
    as _i3;
import 'package:hdv_watcher/features/item/domain/entitie/item.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeItem_0 extends _i1.SmartFake implements _i2.Item {
  _FakeItem_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ItemRemoteDateSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemRemoteDateSource extends _i1.Mock
    implements _i3.ItemRemoteDateSource {
  MockItemRemoteDateSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Item> fetchItem({required _i2.Item? item}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchItem,
          [],
          {#item: item},
        ),
        returnValue: _i4.Future<_i2.Item>.value(_FakeItem_0(
          this,
          Invocation.method(
            #fetchItem,
            [],
            {#item: item},
          ),
        )),
      ) as _i4.Future<_i2.Item>);

  @override
  _i4.Future<Map<String, dynamic>> fetchPaginatedItems({
    required int? pageIndex,
    required _i5.PriceType? priceType,
    required int? batchSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPaginatedItems,
          [],
          {
            #pageIndex: pageIndex,
            #priceType: priceType,
            #batchSize: batchSize,
          },
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
